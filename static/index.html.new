<!DOCTYPE html>
<html>

<head>
    <title>myhacknews2</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" href="css/jquery-ui-timepicker-addon.min.css">
    <link rel="stylesheet" href="css/bootstrap4-toggle.min.css">
    <link rel="stylesheet" type="text/css" href="css/pagination.css">
    <link rel="stylesheet" type="text/css" href="css/daterangepicker.css">
    <link rel="stylesheet" type="text/css" href="css/font-awesome.min.css">
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/jquery.dataTables.css" />
    <link rel="stylesheet" href="css/buttons.dataTables.css" />
    <link rel="stylesheet" href="css/select.dataTables.css" />
    <link rel="stylesheet" href="css/responsive.dataTables.css" />    
    <style>
        .show-articles {
            margin-top: 10px;
        }

        .result-keywords li {
            display: inline-block;
        }

        .container {
            margin-top: 5px;
        }

        .btn:focus {
            box-shadow: none !important;
        }

        a:visited {
            color: #808080;
            /*已访问的链接颜色*/
        }
        }
    </style>

</head>

<body>
    <div class="container">
        <span class="label label-default">
            <h4 style='margin-bottom: 10px;'>myhacknews2<small>&nbsp;v0.1</small></h4>
        </span>    
        <div class="custom-control custom-switch" style="display: inline;padding-left:  50px;margin: 50;">
            <input type="checkbox" class="custom-control-input" id="customSwitches" ">
            <label class="custom-control-label" for="customSwitches"></label>
        </div>
        <span> <button style="padding: 2px;margin-top: -10px;" type="button" class="btn " data-toggle="modal"
                data-target="#myModal">
                <span>过滤关键字</span>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi bi-pencil-square" viewBox="0 0 16 16">
                    <path
                        d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                    <path fill-rule="evenodd"
                        d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z" />
                </svg>
            </button>
        </span>
        <label style="margin-left: 30px" for="daterange_input">查询时间段：</label>
        <input id="daterange_input" type="text" name="daterange" style="width: 190px;" value="" />
        <button style="margin-left: 30px;" id="query" type="button" class="btn" data-toggle="tooltip"
            data-placement="top" title="刷新">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
                class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z" />
                <path
                    d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z" />
            </svg> </button>

        <div class="row">
            <div class="show-keywords">


                <div class="select-keywords" style="display: inline;">

                    <div class="modal fade" id="myModal"  >
                        <div class="modal-dialog" style="width:1000px;" >
                            <div class="modal-content" style="width:1000px;" >
                                <div class="modal-header">
                                    <h5 class="modal-title">修改关键字分类</h5>
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                </div>
                                <div class="modal-body">
                                    <table cellpadding="0" cellspacing="0" border="0" class="dataTable table table-striped" id="example">
                                    </table>
                                </div>
                           
                                <div class="modal-footer">
                                    <small>提示：过滤关键字功能只匹配文章的标题，不匹配正文</small>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button id="btn-save-keywords" type="button" class="btn btn-primary"
                                        data-dismiss="modal">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="result-keywords"></div>
                    <script id="keywords-template" type="text/x-handlebars-template">
                        {{#each keywords}}
                          {{#if this.isgroup}}
                            <div class="btn-group">
                                <button style="margin-left:1px;margin-right:0px;padding:0px;" type="button" class="btn btn-sm" data-toggle="modal" data-target="#keyword-articles-modal">
                                    <span style="background-color:#F1F8FF;color:#0366D6" class="badge keyword" data-ids={{this.ids}}> {{this.name}}<span>&nbsp;({{listNumber this.ids}})</span></span>
                                    <button  style="margin-left:0px;margin-right:0px;padding:0px;background-color:#F1F8FF;color:#0366D6;border: 0px;" type="button" class="btn  dropdown-toggle dropdown-toggle-split" data-toggle="dropdown"></button>
                                </button>
                                
                                <span class="caret"></span>
                                </button>
                                <div class="dropdown-menu">
                                    {{#each this.sub}}
                                    <button style="margin-left:1px;margin-right:1px;padding:0px;" type="button" class="btn btn-sm" data-toggle="modal" data-target="#keyword-articles-modal">
                                        <span style="background-color:#F1F8FF;color:#0366D6" class="badge keyword" data-ids={{this.ids}}>{{this.name}}<span>&nbsp;({{listNumber this.ids}})</span></span>
                                    </button>
                                    {{/each}}
                                </div>
                            </div>                
                          {{/if}}
            
                          {{#unless  this.isgroup}}
                          <button style="margin-left:1px;margin-right:1px;padding:0px;" type="button" class="btn btn-sm" data-toggle="modal" data-target="#keyword-articles-modal">
                            <span style="background-color:#F1F8FF;color:#0366D6" class="badge keyword" data-ids={{this.ids}}>{{this.name}}<span>&nbsp;({{listNumber this.ids}})</span></span>
                        </button>
                          {{/unless}}
                        {{/each}}
                    </script> 


                    <div class="modal fade" id="keyword-articles-modal">
                        <div class="modal-dialog">
                            <div class="modal-content" style="width: 1000px;">
                                <div class="modal-body">
                                    <ul class="list list-group list-group-flush">
                                        <div id="pagination-articles2"></div>
                                        <div class="result-keyword-articles-tmpl"></div>
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">关闭</button>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>

        <div class="row">


            <div class="col-12">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="new-tab" data-toggle="tab" href="#new" role="tab"
                            aria-controls="new" aria-selected="flase">文章列表</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab"
                            aria-controls="profile" aria-selected="false">我的收藏</a>
                    </li>
                </ul>

                <div class="tab-content" id="myTabContent">

                    <div class="tab-pane fade show active" id="new" role="tabpanel" aria-labelledby="new-tab">                        
                        <div class="show-articles">
                            <div id="pagination-articles"></div>
                            <div class="show-articles-tmpl"></div>
                            <script id="articles-template" type="text/x-handlebars-template">                                
                                <div class="articles">
                                    <input style="display:none" class="search" placeholder="Search" />
                                    <ul class="list list-group list-group-flush">
                                        {{#each articles}}
                                        <li class="list-group-item p-1">
                                            <span class="id" style="display: none">{{this.id}} </span> <span style="color:#9EABB3">{{showDate this.create_at}}</span>
                                            <a style="margin-left:5px;margin-right:10px;" class="url" href={{this.url}} target=”_blank”>{{this.title}}({{this.title_zh}})</a>

    <a style="margin-left:5px;margin-right:10px;" class="url" href="https://news.ycombinator.com/{{this.hacknewslink}}" target=”_blank”>看评论</a>
                                            <small style="font-style:oblique;color:#9EABB3">{{ this.site_name }}</small>

                                            <button type="button" class="btn btn-sm favorite" data-toggle="tooltip" data-placement="top" title="收藏">
                                              <svg xmlns="http://www.w3.org/2000/svg" style="display: none;" width="16" height="16" fill="#D3D3D3" class="bi bi-star-fill" viewBox="0 0 16 16">
                                                <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.14 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                                              </svg>
                                              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#D3D3D3" class="bi bi-star" viewBox="0 0 16 16">
                                                <path fill-rule="evenodd" d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z"/>
                                              </svg>                                              
                                            </button>

                                            <button style="display:none" type="button" class="btn btn-sm delete_article"><i class="fa fa-trash icon-white"></i></button>
                                        </li>
                                        {{/each}}
                                    </ul>
                                    <!--<ul class="pagination"></ul>-->
                                </div>
                            </script>
                        </div>
                    </div>

                    <div class="tab-pane fade show" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                        <div class="show-favorite-articles">
                            <div class="show-favorite-articles-tmpl"></div>
                            <script id="favorite-articles-template" type="text/x-handlebars-template">
                                <div id="favorite-articles">
                                    <ul class="list list-group list-group-flush">
                                        {{#each articles}}
                                        <li class="list-group-item p-1">
                                            <span class="id" style="display: none">{{this.id}} </span>
                                            <a style="margin-left:5px;margin-right:10px;" class="url" href={{this.url}} target=”_blank”>{{this.title}}</a>
                                        </li>
                                        {{/each}}
                                    </ul>
                                </div>
                            </script>
                        </div>
                    </div>

                </div>

            </div>



        </div>
    </div>



    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.6.0/umd/popper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pikaday/1.8.2/pikaday.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.6/handlebars.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-migrate/3.3.2/jquery-migrate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/list.js/2.3.1/list.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-migrate/3.3.2/jquery-migrate.min.js"></script>
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/lokijs/1.5.11/lokijs.min.js"></script> -->
    <script src="js/jquery.dataTables.js"></script>
    <script src="js/dataTables.buttons.js"></script>
    <script src="js/dataTables.select.js"></script>
    <script src="js/dataTables.responsive.js"></script>
    <script src="js/dataTables.altEditor.free.js"></script>
    <script>

    function getGroups() {
        var dataSet = [];
        var strGroupsInMem = localStorage.getItem('groups');
        if (!strGroupsInMem) {
            $.ajax({
                url: '/api/groups',
                async: false,
                success: function (data) {
                    console.log(data);
                    dataSet = data;
                }
            });
        } else {
            dataSet = JSON.parse(strGroupsInMem);
        }
        return dataSet;
    }



      var columnDefs = [{
        title: "类别",
        type: "text",
        targets: 'no-sort', orderable: false
      }, {
        title: "关键字列表",
        type: "text",
        targets: 'no-sort', orderable: false
      }];
    
      var myTable;
    
      myTable = $('#example').DataTable({
        "sPaginationType": "full_numbers",
        "aaSorting": [],
        data: getGroups(),
        columns: columnDefs,
        dom: 'Bfrtip',        // Needs button container
        select: 'single',
        responsive: true,
        altEditor: true,     // Enable altEditor
        buttons: [
            {
            text: '添加分类',
            name: 'add'        // do not change name
            },
            {
            extend: 'selected', // Bind to Selected row
            text: '修改分类',
            name: 'edit'        // do not change name
            },
            {
            extend: 'selected', // Bind to Selected row
            text: '删除分类',
            name: 'delete'      // do not change name
            }
        ]
      });
        </script>

    <script>
        Handlebars.registerHelper("listNumber", function (list, options) {
            return list.length;
        })
        Handlebars.registerHelper("showDate", function (date, options) {
            return date.replace(`${moment().year()}-`, '');
        })        
       /* var keywords = localStorage.getItem("keywords");
        if (keywords) {
            console.log(keywords);
            $("#input-keywords")[0].value = keywords
        }*/

        $('input[name="daterange"]').daterangepicker({
            startDate: moment().subtract(1, 'days'),
            endDate: moment()
        });
        var startDate = moment().subtract(1, 'days').format('YYYYMMDD');
        var endDate = moment().format('YYYYMMDD');

        $(function () {
            $('input[name="daterange"]').daterangepicker({
                opens: 'left',
                locale: {
                    format: 'M/D/Y'
                },
                ranges: {
                    '今天': [moment(), moment()],
                    '昨天': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    '昨天和今天': [moment().subtract(1, 'days'), moment()],
                    '本周': [moment().startOf('week').add(1, 'days'), moment().endOf('week').add(1, 'days')],
                    '上周': [moment().startOf('week').subtract('week', 1).add(1, 'days'), moment().endOf('week').subtract('week', 1).add(1, 'days')],
                    '本月': [moment().startOf('month'), moment().endOf('month')],
                    '上个月': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    '近7天': [moment().subtract(6, 'days'), moment()],
                    '近30天': [moment().subtract(29, 'days'), moment()],
                    '近1年': [moment().subtract(365, 'days'), moment()],
                    '近2年': [moment().subtract(365*2, 'days'), moment()],
                    '近3年': [moment().subtract(365*3, 'days'), moment()],
                    '近4年': [moment().subtract(365*4, 'days'), moment()],
                    '近5年': [moment().subtract(365*5, 'days'), moment()],
                    '近10年': [moment().subtract(365*10, 'days'), moment()],
                    '2020年': [moment('2020-01-01'), moment('2021-01-01')],
                    '2019年': [moment('2019-01-01'), moment('2020-01-01')],
                    '2018年': [moment('2018-01-01'), moment('2019-01-01')],
                    '2017年': [moment('2017-01-01'), moment('2018-01-01')],
                    '2016年': [moment('2016-01-01'), moment('2017-01-01')],
                    '全部': [moment('2000-01-01'), moment()],
                }
            }, function (start, end, label) {
                startDate = start.format('YYYYMMDD');
                endDate = end.format('YYYYMMDD');
                console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
                show_articles_and_keywords();
            });
        });



        $("#btn-save-keywords").on('click', function () {
           // console.log($("#input-keywords").val());
            //var keywords = $("#input-keywords").val();
            //localStorage.setItem("keywords", keywords);
            
            localStorage.setItem("groups", JSON.stringify(myTable.data().toArray()));
            show_articles_and_keywords();
        })

        $("input[type='checkbox']").on('change', (event) => {
            show_articles_and_keywords();
            var checked = $("input[type='checkbox']")[0].checked;
            localStorage.setItem("page_config", JSON.stringify({
                checked_keyword: checked
            }));
            if (checked) {
               /* var strKeywords = localStorage.getItem("keywords");
                if (!strKeywords) {
                    confirm("还没有关键字，请先添加关键字。\n(点击“过滤关键字”按钮进行添加)");
                }*/
            }
        })

        $("#query").on('click', function () {
           // console.log($("#input-keywords").val())
            console.log($("input[type='checkbox']")[0].checked)
            console.log(startDate)
            show_articles_and_keywords()
        })

        var totol_pages = 1;
        /*
                function get_articles(page) {
                    var searchKeywordFlag = $("input[type='checkbox']")[0].checked;
                    console.log();
                    var keywords = '';
                    if (searchKeywordFlag) {
                        keywords = localStorage.getItem("keywords");
                    }
                    console.log(keywords);

                    $.ajax({
                        async: false,
                        url: `http://localhost:5000/api/articles?startDate=${startDate}&endDate=${endDate}&page=${page}&keywords=${keywords}`,
                        success: function(data) {
                            console.log(data);
                            var articlesScript = $("#articles-template").html();
                            var theTemplate = Handlebars.compile(articlesScript);
                            var articles_context = {
                                articles: data.articles
                            };
                            totol_pages = data.pages
                            var theCompiledHtml = theTemplate(articles_context);
                            $('.show-articles-tmpl').html(theCompiledHtml);

                            var keywordsScript = $("#keywords-template").html();
                            var theTemplate = Handlebars.compile(keywordsScript);
                            var keywords_context = {
                                keywords: data.keywords
                            };
                            var theCompiledHtml = theTemplate(keywords_context);
                            $('.result-keywords').html(theCompiledHtml);
                            $(".keyword").on('click', function(event) {

                                event.preventDefault();
                                console.log(this.innerHTML);
                                var templateScript = $("#result-keyword-articles-template").html();
                                var theTemplate = Handlebars.compile(templateScript);
                                var articles_context = {
                                    name: this.innerHTML
                                };
                                var theCompiledHtml = theTemplate(articles_context);
                                $('.result-keyword-articles').html(theCompiledHtml);
                            })
                            var options = {
                                valueNames: ['url'],
                            };

                            var userList = new List('articles', options);

                            $(".delete_article").on('click', function() {
                                var title = $(this).parent().find('.url').text();
                                if (!confirm(`确认删除如下文章？\n ${title}`)) {
                                    return;
                                }
                                var id = $(this).parent().find('.id').text();
                                $.ajax({
                                    url: `http://127.0.0.1:5000/api/delete_article/${id}`
                                });

                                console.log(id);
                                $(this).parent().remove();
                            })

                        }
                    });

                }
        */
        //get_articles(1);

        /*  测试动态添加tab
                $('#btnAdd').click(function(e) {
                    console.log($('#myTab li'))
                    var nextTab = $('#myTab li').length + 1;

                    // create the tab
                    $('<li  class="nav-item"><a class="nav-link" href="#tab' + nextTab + '" data-toggle="tab">Tab ' + nextTab + '</a></li>').appendTo('#myTab');

                    // create the tab content
                    //$('<div class="tab-pane" id="tab' + nextTab + '">tab' + nextTab + ' content</div>').appendTo('.tab-content');

                    // make the new tab active
                    $('#myTab a:last').tab('show');
                });
        */
        /*
                $.ajax({
                    url: "http://localhost:3000/api/keywords",
                    success: function(data) {
                        console.log(data);
                        var keywordsScript = $("#keywords-template").html();
                        var theTemplate = Handlebars.compile(keywordsScript);
                        var keywords_context = {
                            keywords: data
                        };
                        var theCompiledHtml = theTemplate(keywords_context);
                        $('.result-keywords').html(theCompiledHtml);
                        $(".keyword").on('click', function(event) {

                            event.preventDefault();
                            console.log(this.innerHTML);
                            var templateScript = $("#result-keyword-articles-template").html();
                            var theTemplate = Handlebars.compile(templateScript);
                            var articles_context = {
                                name: this.innerHTML
                            };
                            var theCompiledHtml = theTemplate(articles_context);
                            $('.result-keyword-articles').html(theCompiledHtml);
                        })
                    }
                });*/

        //测试indexedDB数据库
        var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB || window.shimIndexedDB;
        var open = indexedDB.open("mydb", 1);


        open.onupgradeneeded = function () {
            var db = open.result;
            var objectStore;
            if (!db.objectStoreNames.contains('articles')) {
                objectStore = db.createObjectStore('articles', {
                    keyPath: 'id'
                });
            }
        };

        open.onsuccess = function () {
            var db = open.result;
            var tx = db.transaction("articles", "readwrite");
            var store = tx.objectStore("articles");
            store.put({
                id: 2,
                name: {
                    first: "John",
                    last: "Doe"
                },
                age: 42
            });
            store.put({
                id: 3,
                name: {
                    first: "Bob",
                    last: "Smith"
                },
                age: 35
            });
            var getJohn = store.get(2);
            getJohn.onsuccess = function () {
                console.log(getJohn.result.name.first);
            };
            tx.oncomplete = function () {
                db.close();
            };
        }
    </script>
    <script>
         var articles = [];
        function load_page_config() {
            var page_config_str = localStorage.getItem('page_config');
            if (page_config_str) {
                var page_config = JSON.parse(page_config_str);
                console.log(page_config.checked_keyword);
                $("input[type='checkbox']")[0].checked = page_config.checked_keyword;
            }
        }

        function show_artices(article_ids, page_element, articles_element) {
            var container = page_element;
            container.pagination({
                dataSource: article_ids,
                locator: 'articles',
                pageSize: 20,
                autoHidePrevious: true,
                autoHideNext: true,
                callback: function (response, pagination) {
                    ids = response.join(',')
                    $.ajax({
                        url: `/api/articlesbyids?ids=${ids}`,
                        async: false,
                        success: function (data) {
                            event.preventDefault();
                            var articlesScript = $("#articles-template").html();
                            var theTemplate = Handlebars.compile(articlesScript);
                            var articles_context = {
                                articles: data
                            };
                            totol_pages = response.pages
                            var theCompiledHtml = theTemplate(articles_context);
                            articles_element.html(theCompiledHtml);
                        }
                    });

                    var options = {
                        valueNames: ['url'],
                    };

                    var userList = new List('articles', options);

                    $(".favorite").each(function () {
                        var id = $(this).parent().find('.id').text();
                        favorite_articels_str = localStorage.getItem("favorite");
                        if (favorite_articels_str) {
                            favorite_articels = JSON.parse(favorite_articels_str);
                            for (var i = 0; i < favorite_articels.length; i++) {
                                if (favorite_articels[i].id == id) {
                                    $(this).children().first().show()
                                    $(this).children().last().hide()
                                    break;
                                }
                            }

                        } else {

                        }

                    })

                    $(".favorite").on('click', function () {

                        var title = $(this).parent().find('.url').text();
                        var url = $(this).parent().find('.url').attr("href")
                        var id = $(this).parent().find('.id').text();
                        if (window.getComputedStyle($(this).children()[0]).display == 'none') {
                            var title = $(this).parent().find('.url').text();
                            var url = $(this).parent().find('.url').attr("href")
                            var id = $(this).parent().find('.id').text();
                            var favorite_articels = [];
                            favorite_articels_str = localStorage.getItem("favorite");
                            if (favorite_articels_str) {
                                favorite_articels = JSON.parse(favorite_articels_str);
                                favorite_articels.push({
                                    'id': id,
                                    'title': title,
                                    'url': url
                                });

                            } else {
                                favorite_articels = [{
                                    'id': id,
                                    'title': title,
                                    'url': url
                                }]
                            }
                            localStorage.setItem("favorite", JSON.stringify(favorite_articels));
                        } else {
                            favorite_articels_str = localStorage.getItem("favorite");
                            if (favorite_articels_str) {
                                favorite_articels = JSON.parse(favorite_articels_str);
                                for (var i = 0; i < favorite_articels.length; i++) {
                                    if (favorite_articels[i].id == id) {
                                        favorite_articels.splice(i, 1);
                                        localStorage.setItem("favorite", JSON.stringify(favorite_articels));
                                        break;
                                    }
                                }
                            }
                        }
                        $(this).children().toggle()
                    })

                    $("[data-toggle='tooltip']").tooltip();

                    $(".delete_article").on('click', function () {
                        var title = $(this).parent().find('.url').text();
                        if (!confirm(`确认删除如下文章？\n ${title}`)) {
                            return;
                        }
                        var id = $(this).parent().find('.id').text();
                        $.ajax({
                            url: `/api/delete_article/${id}`
                        });

                        console.log(id);
                        $(this).parent().remove();
                    })
                }
            })
        }

            function show_articles_and_keywords() {
                var searchKeywordFlag = $("input[type='checkbox']")[0].checked;
                var keywords = '';
                if (searchKeywordFlag) {

                    var groups = getGroups();
                    var strKeywords = '';
                    for (i = 0; i < groups.length; ++i) {
                        strKeywords = strKeywords + ' ' + groups[i][1]
                    }
                    keywords = encodeURIComponent(strKeywords);


                }
                console.log(keywords);

                articles = [];
                var keyword_ids = [];

            $.ajax({
                url: `/api/articles?startDate=${startDate}&endDate=${endDate}&keywords=${keywords}`,
                async: false,
                success: function (data) {
                    articles = data.articles
                    keyword_ids = data.keywords
                }
            });

            console.log(keywords)
            var keywordsScript = $("#keywords-template").html();
            var theTemplate = Handlebars.compile(keywordsScript);
            var grouplst = getGroups();
            var inGrouplst = []
            var taglst = []
            for (i = 0; i < grouplst.length; i++) {
                var found = false;
                var groupObj = {}

                var sub = []
                groupObj.name = grouplst[i][0]
                ids = []
                groupObj.isgroup = true
                for (j = 0; j < keyword_ids.length; j++) {
                    var tags = grouplst[i][1].toLowerCase().match(/(?:[^\s"]+|"[^"]*")+/g);
                    for (k=0;k<tags.length;k++) {
                        if (tags[k].replace(/^\"|\"$/g, '') ==  keyword_ids[j].name.toLowerCase()) {
                            found = true
                            sub.push(keyword_ids[j])
                            ids.push(...keyword_ids[j].ids)
                            inGrouplst.push(keyword_ids[j])
                            break
                        }
                    }
                }
                groupObj.sub = sub
                if (found) {
                    
                    //重新按时间排序
                    var newIds = []
                    for (m=0; m<articles.length; m++) {
                        if (ids.includes(articles[m])) {
                            newIds.push(articles[m]);
                        }
                    }
                    groupObj.ids = newIds;
                    taglst.push(groupObj)
                }

            }
    
 

            for (i=0; i<keyword_ids.length; i++) {
                var tabObj = {}
                if (!inGrouplst.includes(keyword_ids[i])) {
                    tabObj.name = keyword_ids[i].name;
                    tabObj.ids = keyword_ids[i].ids;
                    tabObj.isgroup = false
                    taglst.push(tabObj)
                }              
            }

            var keywords_context = {
                keywords: taglst

            };            
            var theCompiledHtml = theTemplate(keywords_context);
            $('.result-keywords').html(theCompiledHtml);
            $(".keyword").on('click', function (event) {
                event.preventDefault();
                ids = this.dataset.ids.split(',')
                show_artices(ids, $('#pagination-articles2'), $('.result-keyword-articles-tmpl'))
            })
            
            show_artices(articles, $('#pagination-articles'), $('.show-articles-tmpl'))
        }

        function show_favorite() {
            var articlesScript = $("#favorite-articles-template").html();
            var theTemplate = Handlebars.compile(articlesScript);
            favorite_articels_str = localStorage.getItem("favorite");
            favorite_articels = JSON.parse(favorite_articels_str);
            var articles_context = {
                articles: favorite_articels
            };
            var theCompiledHtml = theTemplate(articles_context);
            $('.show-favorite-articles-tmpl').html(theCompiledHtml);
        }
        $(function () {
            load_page_config();
            show_articles_and_keywords();
            show_favorite();
        })

        $("#profile-tab").on('click', function () {
            show_favorite();
        })
    </script>
    
</body>

</html>
